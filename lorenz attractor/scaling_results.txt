[1] scaling1=0.0, scaling2=0.0, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 0.58783346,    std 0.0
 ##################################################################### 
-----------------------------------------------
[2] scaling1=0.0, scaling2=0.0, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 3.1206303,    std 0.0
 ##################################################################### 
-----------------------------------------------
[3] scaling1=0.0, scaling2=0.0, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1.9716855,    std 0.0
 ##################################################################### 
-----------------------------------------------
[4] scaling1=0.0, scaling2=0.0, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 2.0811393,    std 0.0
 ##################################################################### 
-----------------------------------------------
[5] scaling1=0.0, scaling2=0.0, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 2.046936,    std 0.0
 ##################################################################### 
-----------------------------------------------
[6] scaling1=0.0, scaling2=0.0, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 2.0496612,    std 0.0
 ##################################################################### 
-----------------------------------------------
[7] scaling1=0.0, scaling2=0.0, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 2.075674,    std 0.0
 ##################################################################### 
-----------------------------------------------
[8] scaling1=0.0, scaling2=0.05, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 121.79191,    std 0.0
 ##################################################################### 
-----------------------------------------------
[9] scaling1=0.0, scaling2=0.05, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 128.68524,    std 0.0
 ##################################################################### 
-----------------------------------------------
[10] scaling1=0.0, scaling2=0.05, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 123.46865,    std 0.0
 ##################################################################### 
-----------------------------------------------
[11] scaling1=0.0, scaling2=0.05, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 123.14489,    std 0.0
 ##################################################################### 
-----------------------------------------------
[12] scaling1=0.0, scaling2=0.05, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 124.54668,    std 0.0
 ##################################################################### 
-----------------------------------------------
[13] scaling1=0.0, scaling2=0.05, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 124.50938,    std 0.0
 ##################################################################### 
-----------------------------------------------
[14] scaling1=0.0, scaling2=0.05, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 123.6844,    std 0.0
 ##################################################################### 
-----------------------------------------------
[15] scaling1=0.0, scaling2=0.1, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 109.493004,    std 0.0
 ##################################################################### 
-----------------------------------------------
[16] scaling1=0.0, scaling2=0.1, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 118.64589,    std 0.0
 ##################################################################### 
-----------------------------------------------
[17] scaling1=0.0, scaling2=0.1, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 111.63397,    std 0.0
 ##################################################################### 
-----------------------------------------------
[18] scaling1=0.0, scaling2=0.1, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 111.13015,    std 0.0
 ##################################################################### 
-----------------------------------------------
[19] scaling1=0.0, scaling2=0.1, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 113.326096,    std 0.0
 ##################################################################### 
-----------------------------------------------
[20] scaling1=0.0, scaling2=0.1, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 112.25899,    std 0.0
 ##################################################################### 
-----------------------------------------------
[21] scaling1=0.0, scaling2=0.1, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 111.371414,    std 0.0
 ##################################################################### 
-----------------------------------------------
[22] scaling1=0.0, scaling2=0.15, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 130.52362,    std 0.0
 ##################################################################### 
-----------------------------------------------
[23] scaling1=0.0, scaling2=0.15, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 137.80823,    std 0.0
 ##################################################################### 
-----------------------------------------------
[24] scaling1=0.0, scaling2=0.15, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 131.9951,    std 0.0
 ##################################################################### 
-----------------------------------------------
[25] scaling1=0.0, scaling2=0.15, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 131.73499,    std 0.0
 ##################################################################### 
-----------------------------------------------
[26] scaling1=0.0, scaling2=0.15, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 133.51817,    std 0.0
 ##################################################################### 
-----------------------------------------------
[27] scaling1=0.0, scaling2=0.15, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 132.57323,    std 0.0
 ##################################################################### 
-----------------------------------------------
[28] scaling1=0.0, scaling2=0.15, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 132.08508,    std 0.0
 ##################################################################### 
-----------------------------------------------
[29] scaling1=0.0, scaling2=0.2, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 96.05767,    std 0.0
 ##################################################################### 
-----------------------------------------------
[30] scaling1=0.0, scaling2=0.2, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 105.6841,    std 0.0
 ##################################################################### 
-----------------------------------------------
[31] scaling1=0.0, scaling2=0.2, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 98.1298,    std 0.0
 ##################################################################### 
-----------------------------------------------
[32] scaling1=0.0, scaling2=0.2, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 97.7426,    std 0.0
 ##################################################################### 
-----------------------------------------------
[33] scaling1=0.0, scaling2=0.2, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 100.10047,    std 0.0
 ##################################################################### 
-----------------------------------------------
[34] scaling1=0.0, scaling2=0.2, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 98.93415,    std 0.0
 ##################################################################### 
-----------------------------------------------
[35] scaling1=0.0, scaling2=0.2, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 98.17366,    std 0.0
 ##################################################################### 
-----------------------------------------------
[36] scaling1=0.0, scaling2=0.25, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 83.33047,    std 0.0
 ##################################################################### 
-----------------------------------------------
[37] scaling1=0.0, scaling2=0.25, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 94.54731,    std 0.0
 ##################################################################### 
-----------------------------------------------
[38] scaling1=0.0, scaling2=0.25, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 85.91719,    std 0.0
 ##################################################################### 
-----------------------------------------------
[39] scaling1=0.0, scaling2=0.25, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 85.35448,    std 0.0
 ##################################################################### 
-----------------------------------------------
[40] scaling1=0.0, scaling2=0.25, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 88.03291,    std 0.0
 ##################################################################### 
-----------------------------------------------
[41] scaling1=0.0, scaling2=0.25, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 86.78738,    std 0.0
 ##################################################################### 
-----------------------------------------------
[42] scaling1=0.0, scaling2=0.25, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 85.7895,    std 0.0
 ##################################################################### 
-----------------------------------------------
[43] scaling1=0.0, scaling2=0.3, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 103.2602,    std 0.0
 ##################################################################### 
-----------------------------------------------
[44] scaling1=0.0, scaling2=0.3, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 112.69934,    std 0.0
 ##################################################################### 
-----------------------------------------------
[45] scaling1=0.0, scaling2=0.3, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 105.35935,    std 0.0
 ##################################################################### 
-----------------------------------------------
[46] scaling1=0.0, scaling2=0.3, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 104.897064,    std 0.0
 ##################################################################### 
-----------------------------------------------
[47] scaling1=0.0, scaling2=0.3, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 107.20864,    std 0.0
 ##################################################################### 
-----------------------------------------------
[48] scaling1=0.0, scaling2=0.3, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 106.03808,    std 0.0
 ##################################################################### 
-----------------------------------------------
[49] scaling1=0.0, scaling2=0.3, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 105.220955,    std 0.0
 ##################################################################### 
-----------------------------------------------
[50] scaling1=0.05, scaling2=0.0, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 8.46977,    std 0.0
 ##################################################################### 
-----------------------------------------------
[51] scaling1=0.05, scaling2=0.0, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 126.59649,    std 0.0
 ##################################################################### 
-----------------------------------------------
[52] scaling1=0.05, scaling2=0.0, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 43.43943,    std 0.0
 ##################################################################### 
-----------------------------------------------
[53] scaling1=0.05, scaling2=0.0, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 45.267567,    std 0.0
 ##################################################################### 
-----------------------------------------------
[54] scaling1=0.05, scaling2=0.0, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 44.466072,    std 0.0
 ##################################################################### 
-----------------------------------------------
[55] scaling1=0.05, scaling2=0.0, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 42.66626,    std 0.0
 ##################################################################### 
-----------------------------------------------
[56] scaling1=0.05, scaling2=0.0, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 33.10382,    std 0.0
 ##################################################################### 
-----------------------------------------------
[57] scaling1=0.05, scaling2=0.05, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 4481.776,    std 0.0
 ##################################################################### 
-----------------------------------------------
[58] scaling1=0.05, scaling2=0.05, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 11656.752,    std 0.0
 ##################################################################### 
-----------------------------------------------
[59] scaling1=0.05, scaling2=0.05, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 4164.048,    std 0.0
 ##################################################################### 
-----------------------------------------------
[60] scaling1=0.05, scaling2=0.05, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 12053.195,    std 0.0
 ##################################################################### 
-----------------------------------------------
[61] scaling1=0.05, scaling2=0.05, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 11646.842,    std 0.0
 ##################################################################### 
-----------------------------------------------
[62] scaling1=0.05, scaling2=0.05, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 16034.683,    std 0.0
 ##################################################################### 
-----------------------------------------------
[63] scaling1=0.05, scaling2=0.05, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 16070.999,    std 0.0
 ##################################################################### 
-----------------------------------------------
[64] scaling1=0.05, scaling2=0.1, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 2435.2454,    std 0.0
 ##################################################################### 
-----------------------------------------------
[65] scaling1=0.05, scaling2=0.1, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 4359.1675,    std 0.0
 ##################################################################### 
-----------------------------------------------
[66] scaling1=0.05, scaling2=0.1, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 3761.8003,    std 0.0
 ##################################################################### 
-----------------------------------------------
[67] scaling1=0.05, scaling2=0.1, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 4365.4927,    std 0.0
 ##################################################################### 
-----------------------------------------------
[68] scaling1=0.05, scaling2=0.1, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 4359.3193,    std 0.0
 ##################################################################### 
-----------------------------------------------
[69] scaling1=0.05, scaling2=0.1, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 4193.5547,    std 0.0
 ##################################################################### 
-----------------------------------------------
[70] scaling1=0.05, scaling2=0.1, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 4195.221,    std 0.0
 ##################################################################### 
-----------------------------------------------
[71] scaling1=0.05, scaling2=0.15, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 992.13837,    std 0.0
 ##################################################################### 
-----------------------------------------------
[72] scaling1=0.05, scaling2=0.15, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1700.1047,    std 0.0
 ##################################################################### 
-----------------------------------------------
[73] scaling1=0.05, scaling2=0.15, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1082.1824,    std 0.0
 ##################################################################### 
-----------------------------------------------
[74] scaling1=0.05, scaling2=0.15, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1702.5803,    std 0.0
 ##################################################################### 
-----------------------------------------------
[75] scaling1=0.05, scaling2=0.15, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1700.544,    std 0.0
 ##################################################################### 
-----------------------------------------------
[76] scaling1=0.05, scaling2=0.15, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1966.3477,    std 0.0
 ##################################################################### 
-----------------------------------------------
[77] scaling1=0.05, scaling2=0.15, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1966.8446,    std 0.0
 ##################################################################### 
-----------------------------------------------
[78] scaling1=0.05, scaling2=0.2, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 799.5034,    std 0.0
 ##################################################################### 
-----------------------------------------------
[79] scaling1=0.05, scaling2=0.2, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1011.4789,    std 0.0
 ##################################################################### 
-----------------------------------------------
[80] scaling1=0.05, scaling2=0.2, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 760.2542,    std 0.0
 ##################################################################### 
-----------------------------------------------
[81] scaling1=0.05, scaling2=0.2, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1009.9394,    std 0.0
 ##################################################################### 
-----------------------------------------------
[82] scaling1=0.05, scaling2=0.2, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1010.4524,    std 0.0
 ##################################################################### 
-----------------------------------------------
[83] scaling1=0.05, scaling2=0.2, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1096.3745,    std 0.0
 ##################################################################### 
-----------------------------------------------
[84] scaling1=0.05, scaling2=0.2, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1095.7958,    std 0.0
 ##################################################################### 
-----------------------------------------------
[85] scaling1=0.05, scaling2=0.25, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 608.39734,    std 0.0
 ##################################################################### 
-----------------------------------------------
[86] scaling1=0.05, scaling2=0.25, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 601.5864,    std 0.0
 ##################################################################### 
-----------------------------------------------
[87] scaling1=0.05, scaling2=0.25, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 540.51575,    std 0.0
 ##################################################################### 
-----------------------------------------------
[88] scaling1=0.05, scaling2=0.25, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 599.11444,    std 0.0
 ##################################################################### 
-----------------------------------------------
[89] scaling1=0.05, scaling2=0.25, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 599.9459,    std 0.0
 ##################################################################### 
-----------------------------------------------
[90] scaling1=0.05, scaling2=0.25, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 887.07056,    std 0.0
 ##################################################################### 
-----------------------------------------------
[91] scaling1=0.05, scaling2=0.25, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 719.41016,    std 0.0
 ##################################################################### 
-----------------------------------------------
[92] scaling1=0.05, scaling2=0.3, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 452.58722,    std 0.0
 ##################################################################### 
-----------------------------------------------
[93] scaling1=0.05, scaling2=0.3, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 460.14505,    std 0.0
 ##################################################################### 
-----------------------------------------------
[94] scaling1=0.05, scaling2=0.3, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 320.91608,    std 0.0
 ##################################################################### 
-----------------------------------------------
[95] scaling1=0.05, scaling2=0.3, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 457.07584,    std 0.0
 ##################################################################### 
-----------------------------------------------
[96] scaling1=0.05, scaling2=0.3, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 457.89462,    std 0.0
 ##################################################################### 
-----------------------------------------------
[97] scaling1=0.05, scaling2=0.3, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 584.62054,    std 0.0
 ##################################################################### 
-----------------------------------------------
[98] scaling1=0.05, scaling2=0.3, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 583.3654,    std 0.0
 ##################################################################### 
-----------------------------------------------
[99] scaling1=0.1, scaling2=0.0, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 6.6970763,    std 0.0
 ##################################################################### 
-----------------------------------------------
[100] scaling1=0.1, scaling2=0.0, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 123.998146,    std 0.0
 ##################################################################### 
-----------------------------------------------
[101] scaling1=0.1, scaling2=0.0, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 39.446423,    std 0.0
 ##################################################################### 
-----------------------------------------------
[102] scaling1=0.1, scaling2=0.0, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 40.908512,    std 0.0
 ##################################################################### 
-----------------------------------------------
[103] scaling1=0.1, scaling2=0.0, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 39.832825,    std 0.0
 ##################################################################### 
-----------------------------------------------
[104] scaling1=0.1, scaling2=0.0, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 37.28529,    std 0.0
 ##################################################################### 
-----------------------------------------------
[105] scaling1=0.1, scaling2=0.0, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 23.956755,    std 0.0
 ##################################################################### 
-----------------------------------------------
[106] scaling1=0.1, scaling2=0.05, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 3467.4692,    std 0.0
 ##################################################################### 
-----------------------------------------------
[107] scaling1=0.1, scaling2=0.05, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 7726.602,    std 0.0
 ##################################################################### 
-----------------------------------------------
[108] scaling1=0.1, scaling2=0.05, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 7282.6353,    std 0.0
 ##################################################################### 
-----------------------------------------------
[109] scaling1=0.1, scaling2=0.05, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 7631.3945,    std 0.0
 ##################################################################### 
-----------------------------------------------
[110] scaling1=0.1, scaling2=0.05, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 7788.1797,    std 0.0
 ##################################################################### 
-----------------------------------------------
[111] scaling1=0.1, scaling2=0.05, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 12932.161,    std 0.0
 ##################################################################### 
-----------------------------------------------
[112] scaling1=0.1, scaling2=0.05, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 12919.65,    std 0.0
 ##################################################################### 
-----------------------------------------------
[113] scaling1=0.1, scaling2=0.1, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 2203.361,    std 0.0
 ##################################################################### 
-----------------------------------------------
[114] scaling1=0.1, scaling2=0.1, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1996.3508,    std 0.0
 ##################################################################### 
-----------------------------------------------
[115] scaling1=0.1, scaling2=0.1, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 2968.869,    std 0.0
 ##################################################################### 
-----------------------------------------------
[116] scaling1=0.1, scaling2=0.1, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 4101.2363,    std 0.0
 ##################################################################### 
-----------------------------------------------
[117] scaling1=0.1, scaling2=0.1, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 4108.1523,    std 0.0
 ##################################################################### 
-----------------------------------------------
[118] scaling1=0.1, scaling2=0.1, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 4015.3833,    std 0.0
 ##################################################################### 
-----------------------------------------------
[119] scaling1=0.1, scaling2=0.1, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 4014.5247,    std 0.0
 ##################################################################### 
-----------------------------------------------
[120] scaling1=0.1, scaling2=0.15, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 908.4613,    std 0.0
 ##################################################################### 
-----------------------------------------------
[121] scaling1=0.1, scaling2=0.15, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1663.5006,    std 0.0
 ##################################################################### 
-----------------------------------------------
[122] scaling1=0.1, scaling2=0.15, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 911.0879,    std 0.0
 ##################################################################### 
-----------------------------------------------
[123] scaling1=0.1, scaling2=0.15, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1663.9044,    std 0.0
 ##################################################################### 
-----------------------------------------------
[124] scaling1=0.1, scaling2=0.15, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1667.3025,    std 0.0
 ##################################################################### 
-----------------------------------------------
[125] scaling1=0.1, scaling2=0.15, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1819.7444,    std 0.0
 ##################################################################### 
-----------------------------------------------
[126] scaling1=0.1, scaling2=0.15, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1818.4421,    std 0.0
 ##################################################################### 
-----------------------------------------------
[127] scaling1=0.1, scaling2=0.2, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 799.77216,    std 0.0
 ##################################################################### 
-----------------------------------------------
[128] scaling1=0.1, scaling2=0.2, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1011.47424,    std 0.0
 ##################################################################### 
-----------------------------------------------
[129] scaling1=0.1, scaling2=0.2, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 755.4065,    std 0.0
 ##################################################################### 
-----------------------------------------------
[130] scaling1=0.1, scaling2=0.2, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1009.74817,    std 0.0
 ##################################################################### 
-----------------------------------------------
[131] scaling1=0.1, scaling2=0.2, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1010.3559,    std 0.0
 ##################################################################### 
-----------------------------------------------
[132] scaling1=0.1, scaling2=0.2, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1068.3687,    std 0.0
 ##################################################################### 
-----------------------------------------------
[133] scaling1=0.1, scaling2=0.2, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1067.4745,    std 0.0
 ##################################################################### 
-----------------------------------------------
[134] scaling1=0.1, scaling2=0.25, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 613.0277,    std 0.0
 ##################################################################### 
-----------------------------------------------
[135] scaling1=0.1, scaling2=0.25, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 609.6397,    std 0.0
 ##################################################################### 
-----------------------------------------------
[136] scaling1=0.1, scaling2=0.25, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 543.5754,    std 0.0
 ##################################################################### 
-----------------------------------------------
[137] scaling1=0.1, scaling2=0.25, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 607.8093,    std 0.0
 ##################################################################### 
-----------------------------------------------
[138] scaling1=0.1, scaling2=0.25, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 608.1972,    std 0.0
 ##################################################################### 
-----------------------------------------------
[139] scaling1=0.1, scaling2=0.25, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 883.4926,    std 0.0
 ##################################################################### 
-----------------------------------------------
[140] scaling1=0.1, scaling2=0.25, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 882.61035,    std 0.0
 ##################################################################### 
-----------------------------------------------
[141] scaling1=0.1, scaling2=0.3, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 459.89438,    std 0.0
 ##################################################################### 
-----------------------------------------------
[142] scaling1=0.1, scaling2=0.3, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 461.66666,    std 0.0
 ##################################################################### 
-----------------------------------------------
[143] scaling1=0.1, scaling2=0.3, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 335.93607,    std 0.0
 ##################################################################### 
-----------------------------------------------
[144] scaling1=0.1, scaling2=0.3, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 457.9476,    std 0.0
 ##################################################################### 
-----------------------------------------------
[145] scaling1=0.1, scaling2=0.3, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 459.2864,    std 0.0
 ##################################################################### 
-----------------------------------------------
[146] scaling1=0.1, scaling2=0.3, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 583.5664,    std 0.0
 ##################################################################### 
-----------------------------------------------
[147] scaling1=0.1, scaling2=0.3, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 582.28613,    std 0.0
 ##################################################################### 
-----------------------------------------------
[148] scaling1=0.15, scaling2=0.0, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 6.050892,    std 0.0
 ##################################################################### 
-----------------------------------------------
[149] scaling1=0.15, scaling2=0.0, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 125.18586,    std 0.0
 ##################################################################### 
-----------------------------------------------
[150] scaling1=0.15, scaling2=0.0, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 40.407238,    std 0.0
 ##################################################################### 
-----------------------------------------------
[151] scaling1=0.15, scaling2=0.0, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 42.027634,    std 0.0
 ##################################################################### 
-----------------------------------------------
[152] scaling1=0.15, scaling2=0.0, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 41.316082,    std 0.0
 ##################################################################### 
-----------------------------------------------
[153] scaling1=0.15, scaling2=0.0, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 39.32542,    std 0.0
 ##################################################################### 
-----------------------------------------------
[154] scaling1=0.15, scaling2=0.0, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 27.283335,    std 0.0
 ##################################################################### 
-----------------------------------------------
[155] scaling1=0.15, scaling2=0.05, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 2955.0776,    std 0.0
 ##################################################################### 
-----------------------------------------------
[156] scaling1=0.15, scaling2=0.05, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 9250.037,    std 0.0
 ##################################################################### 
-----------------------------------------------
[157] scaling1=0.15, scaling2=0.05, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 8266.433,    std 0.0
 ##################################################################### 
-----------------------------------------------
[158] scaling1=0.15, scaling2=0.05, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 9397.981,    std 0.0
 ##################################################################### 
-----------------------------------------------
[159] scaling1=0.15, scaling2=0.05, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 9250.963,    std 0.0
 ##################################################################### 
-----------------------------------------------
[160] scaling1=0.15, scaling2=0.05, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 14685.462,    std 0.0
 ##################################################################### 
-----------------------------------------------
[161] scaling1=0.15, scaling2=0.05, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 14629.211,    std 0.0
 ##################################################################### 
-----------------------------------------------
[162] scaling1=0.15, scaling2=0.1, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 2102.82,    std 0.0
 ##################################################################### 
-----------------------------------------------
[163] scaling1=0.15, scaling2=0.1, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 2719.3848,    std 0.0
 ##################################################################### 
-----------------------------------------------
[164] scaling1=0.15, scaling2=0.1, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 3340.1096,    std 0.0
 ##################################################################### 
-----------------------------------------------
[165] scaling1=0.15, scaling2=0.1, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 2023.9496,    std 0.0
 ##################################################################### 
-----------------------------------------------
[166] scaling1=0.15, scaling2=0.1, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 4223.981,    std 0.0
 ##################################################################### 
-----------------------------------------------
[167] scaling1=0.15, scaling2=0.1, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 4119.256,    std 0.0
 ##################################################################### 
-----------------------------------------------
[168] scaling1=0.15, scaling2=0.1, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 4113.8877,    std 0.0
 ##################################################################### 
-----------------------------------------------
[169] scaling1=0.15, scaling2=0.15, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 886.9716,    std 0.0
 ##################################################################### 
-----------------------------------------------
[170] scaling1=0.15, scaling2=0.15, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 211.27997,    std 0.0
 ##################################################################### 
-----------------------------------------------
[171] scaling1=0.15, scaling2=0.15, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 212.44028,    std 0.0
 ##################################################################### 
-----------------------------------------------
[172] scaling1=0.15, scaling2=0.15, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1681.7733,    std 0.0
 ##################################################################### 
-----------------------------------------------
[173] scaling1=0.15, scaling2=0.15, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1679.54,    std 0.0
 ##################################################################### 
-----------------------------------------------
[174] scaling1=0.15, scaling2=0.15, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1923.0256,    std 0.0
 ##################################################################### 
-----------------------------------------------
[175] scaling1=0.15, scaling2=0.15, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1920.2825,    std 0.0
 ##################################################################### 
-----------------------------------------------
[176] scaling1=0.15, scaling2=0.2, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 803.5789,    std 0.0
 ##################################################################### 
-----------------------------------------------
[177] scaling1=0.15, scaling2=0.2, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1010.2731,    std 0.0
 ##################################################################### 
-----------------------------------------------
[178] scaling1=0.15, scaling2=0.2, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 738.6149,    std 0.0
 ##################################################################### 
-----------------------------------------------
[179] scaling1=0.15, scaling2=0.2, scaling3=0.15
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1008.8324,    std 0.0
 ##################################################################### 
-----------------------------------------------
[180] scaling1=0.15, scaling2=0.2, scaling3=0.2
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1009.3252,    std 0.0
 ##################################################################### 
-----------------------------------------------
[181] scaling1=0.15, scaling2=0.2, scaling3=0.25
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1089.2504,    std 0.0
 ##################################################################### 
-----------------------------------------------
[182] scaling1=0.15, scaling2=0.2, scaling3=0.3
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 1088.1445,    std 0.0
 ##################################################################### 
-----------------------------------------------
[183] scaling1=0.15, scaling2=0.25, scaling3=0.0
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 609.03815,    std 0.0
 ##################################################################### 
-----------------------------------------------
[184] scaling1=0.15, scaling2=0.25, scaling3=0.05
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 605.16345,    std 0.0
 ##################################################################### 
-----------------------------------------------
[185] scaling1=0.15, scaling2=0.25, scaling3=0.1
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:205: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:659: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 1024 units.

 ##################################################################### 
Mean NRMSE 535.1572,    std 0.0
 ##################################################################### 
-----------------------------------------------

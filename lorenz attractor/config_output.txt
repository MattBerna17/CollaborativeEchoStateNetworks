
--- Config File: config_tmp_1.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1841.3702,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_2.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3514.9402,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_3.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3273.573,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_4.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2532.0203,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_5.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2522.6362,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_6.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3124.5413,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_7.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2617.1475,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_8.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3227.1782,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_9.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3280.6663,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_10.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3020.5942,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_11.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3255.7148,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_12.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3096.835,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_13.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2627.3699,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_14.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3422.5894,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_15.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 541.4184,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_16.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2528.2632,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_17.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2559.1035,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_18.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3268.818,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_19.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3102.1592,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_20.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3275.4592,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_21.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3287.888,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_22.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3088.0505,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_23.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3197.0085,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_24.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 605.1783,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_25.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 754.86743,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_26.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3417.6428,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_27.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3817.3057,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_28.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2528.234,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_29.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2642.6357,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_30.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3097.9487,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_31.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3160.1294,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_32.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1401.8308,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_33.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2226.2046,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_34.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3180.917,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_35.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3192.524,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_36.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2859.6978,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_37.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2972.1248,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_38.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3251.2827,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_39.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1275.3564,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_40.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2968.754,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_41.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2968.6697,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_42.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2935.2776,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_43.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 642.2161,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_44.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2818.9365,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_45.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3284.2593,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_46.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3056.816,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_47.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3275.3538,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_48.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2677.7751,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_49.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 447.9139,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_50.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3192.9321,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_51.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2140.5488,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_52.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3232.7793,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_53.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 480.30402,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_54.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2533.9949,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_55.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3040.084,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_56.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2900.0427,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_57.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2233.868,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_58.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2007.5876,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_59.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3259.5579,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_60.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2911.0684,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_61.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3093.7695,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_62.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3024.39,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_63.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2843.8015,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_64.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3222.7136,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_65.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 833.141,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_66.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2533.891,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_67.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3044.679,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_68.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2924.7556,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_69.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 370.31934,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_70.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1360.2736,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_71.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2951.1868,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_72.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2981.972,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_73.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3332.7031,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_74.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2833.68,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_75.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3258.243,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_76.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3204.1912,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_77.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 322.3211,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_78.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 258.8532,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_79.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2923.7703,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_80.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3062.1333,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_81.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 390.74945,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_82.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 979.29205,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_83.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1125.6523,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_84.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3239.9731,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_85.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3043.2993,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_86.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2828.0215,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_87.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2818.4119,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_88.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2573.681,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_89.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 315.52313,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_90.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 356.8635,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_91.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2885.042,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_92.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3017.7913,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_93.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2970.0598,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_94.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2841.49,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_95.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 303.0356,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_96.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3103.552,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_97.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 829.6104,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_98.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1308.8282,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_99.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1858.6171,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_100.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 490.4645,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_101.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2981.8809,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_102.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3675.0137,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_103.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2960.1272,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_104.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2852.342,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_105.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3009.0515,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_106.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3358.2314,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_107.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3610.1914,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_108.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2189.8298,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_109.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 731.6436,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_110.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1229.0604,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_111.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1706.8428,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_112.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 686.2871,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_113.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2563.523,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_114.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3181.1284,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_115.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2888.4866,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_116.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3017.8535,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_117.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2991.4807,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_118.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3348.2568,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_119.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3625.3003,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_120.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 631.67847,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_121.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2860.9707,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_122.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1017.8575,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_123.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1399.5596,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_124.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 804.9056,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_125.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 719.39905,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_126.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2977.5469,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_127.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3139.7063,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_128.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2971.7317,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_129.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3023.159,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_130.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2928.74,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_131.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3565.3552,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_132.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 629.8619,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_133.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3059.1777,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_134.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3225.9272,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_135.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 807.5799,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_136.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 377.16483,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_137.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 553.842,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_138.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 867.06744,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_139.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3141.6182,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_140.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 441.6421,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_141.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 532.481,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_142.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2983.827,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_143.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2991.8455,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_144.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3470.0361,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_145.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 5659.529,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_146.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 4182.0396,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_147.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 8258.907,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_148.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 4219.578,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_149.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3114.942,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_150.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 4919.86,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_151.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3005.9219,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_152.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3526.83,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_153.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3273.4258,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_154.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 995.44904,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_155.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2951.5176,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_156.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 750.7965,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_157.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 4097.835,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_158.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3585.5398,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_159.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 7889.4326,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_160.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 4353.1353,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_161.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 521.79553,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_162.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 5507.221,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_163.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3139.0342,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_164.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3052.1711,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_165.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3034.2366,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_166.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 892.32025,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_167.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2893.0356,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_168.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 820.3884,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_169.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3142.2593,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_170.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2977.3975,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_171.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 6839.8066,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_172.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3206.9602,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_173.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1599.6715,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_174.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 4966.01,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_175.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 679.14844,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_176.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3020.0044,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_177.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2985.8948,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_178.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 933.65594,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_179.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2956.0264,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_180.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 852.61755,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_181.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 347.8668,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_182.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 581.54425,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_183.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 650.1602,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_184.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2898.8298,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_185.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2892.5542,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_186.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 374.31375,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_187.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 408.5525,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_188.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 388.15707,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_189.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2838.5718,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_190.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2991.7244,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_191.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3047.8792,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_192.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3646.4314,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_193.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3157.2507,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_194.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3806.3926,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_195.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3522.7852,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_196.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2893.1904,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_197.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3267.9016,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_198.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 325.06204,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_199.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1605.7714,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_200.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2650.0679,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_201.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2267.9424,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_202.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2854.4282,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_203.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2455.344,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_204.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 322.14502,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_205.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1366.9669,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_206.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3656.388,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_207.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3596.7627,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_208.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2551.2207,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_209.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3216.0571,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_210.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 272.54007,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_211.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1866.5282,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_212.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3216.5786,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_213.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2844.2205,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_214.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3200.103,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_215.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1012.24115,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_216.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 281.9985,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_217.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1010.95264,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_218.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3515.1965,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_219.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3525.3313,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_220.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2561.3523,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_221.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3199.8884,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_222.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 907.6431,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_223.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2221.3276,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_224.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2245.357,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_225.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2712.2463,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_226.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3079.2595,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_227.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 832.0021,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_228.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 499.80313,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_229.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3342.7136,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_230.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2718.5752,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_231.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2748.5396,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_232.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2827.6013,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_233.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2820.9846,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_234.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2874.1104,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_235.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 229.43051,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_236.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3194.7122,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_237.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 156.30351,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_238.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3250.1055,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_239.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3263.7532,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_240.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1692.8132,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_241.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 414.6729,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_242.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2828.2566,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_243.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2844.7205,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_244.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 274.438,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_245.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 406.9096,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_246.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 360.08374,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_247.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1974.2677,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_248.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3018.956,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_249.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2854.5417,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_250.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3335.9045,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_251.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2891.7786,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_252.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2874.2366,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_253.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 388.4196,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_254.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2884.276,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_255.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2884.328,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_256.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 297.6977,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_257.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 342.4446,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_258.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 362.398,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_259.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2940.9392,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_260.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3020.7847,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_261.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2962.5513,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_262.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3335.7268,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_263.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2951.68,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_264.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2879.181,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_265.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3291.4292,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_266.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2896.36,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_267.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2988.047,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_268.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 672.2169,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_269.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 343.1069,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_270.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 364.15234,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_271.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3165.9097,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_272.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3021.7734,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_273.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3010.9963,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_274.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3281.137,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_275.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3045.0884,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_276.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2877.7317,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_277.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3517.6858,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_278.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2868.4058,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_279.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2976.8987,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_280.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3022.4143,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_281.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2602.7134,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_282.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 262.39658,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_283.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2830.1904,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_284.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3021.3362,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_285.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2970.592,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_286.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3072.0186,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_287.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3121.8733,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_288.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2820.2188,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_289.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3742.8416,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_290.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2888.551,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_291.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2980.3132,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_292.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1496.0802,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_293.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2991.1042,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_294.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3097.2085,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_295.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 612.584,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_296.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 996.7211,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_297.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 871.8558,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_298.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3690.033,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_299.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3441.028,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_300.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3385.6367,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_301.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3406.8228,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_302.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3097.002,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_303.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 879.9512,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_304.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1348.7545,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_305.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3016.406,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_306.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3013.2952,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_307.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 592.7672,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_308.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 897.57465,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_309.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 884.10913,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_310.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3776.4827,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_311.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3413.0137,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_312.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3424.4358,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_313.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 869.5654,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_314.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 761.45435,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_315.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 944.36395,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_316.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1120.9486,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_317.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3554.1526,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_318.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2983.93,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_319.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3058.9153,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_320.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 841.7407,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_321.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 916.3222,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_322.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3556.5286,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_323.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3382.4546,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_324.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3509.76,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_325.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3459.7437,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_326.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2990.219,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_327.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1051.8337,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_328.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 375.62335,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_329.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 382.39795,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_330.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 447.12408,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_331.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3271.9324,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_332.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3474.843,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_333.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 800.4033,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_334.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3629.086,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_335.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2960.3918,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_336.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3816.959,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_337.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2409.7595,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_338.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 8290.356,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_339.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3033.7515,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_340.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2832.077,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_341.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 14564.37,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_342.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 14990.438,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_343.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2613.1572,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_344.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1713.0417,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_345.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1407.5844,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_346.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3014.699,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_347.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 908.1186,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_348.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2862.4368,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_349.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2025.4175,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_350.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 6872.0073,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_351.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3022.3955,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_352.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2996.2388,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_353.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 10062.15,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_354.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 12470.74,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_355.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2546.803,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_356.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2555.562,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_357.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1176.7637,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_358.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2841.0308,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_359.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3580.9263,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_360.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 754.76874,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_361.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1609.2488,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_362.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 4595.3403,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_363.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1540.8192,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_364.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2975.2422,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_365.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 5476.132,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_366.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 9991.162,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_367.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2091.5806,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_368.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2831.7542,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_369.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 819.3357,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_370.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2911.6665,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_371.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2867.6743,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_372.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3143.9639,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_373.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3015.3032,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_374.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 360.85062,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_375.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 504.29974,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_376.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3008.4182,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_377.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2976.3472,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_378.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2540.3813,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_379.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 498.58176,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_380.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 418.3818,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_381.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 967.78644,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_382.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3604.3723,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_383.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3716.299,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_384.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2847.0986,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_385.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3349.06,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_386.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3663.7031,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_387.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3384.2825,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_388.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3402.0237,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_389.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 258.85294,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_390.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 274.1543,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_391.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3277.6536,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_392.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2831.8992,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_393.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2951.0076,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_394.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1899.8806,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_395.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 735.7962,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_396.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 338.0152,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_397.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3138.033,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_398.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3744.9739,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_399.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3349.0093,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_400.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3386.7864,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_401.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2644.2795,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_402.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 596.1525,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_403.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3408.8638,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_404.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2857.3635,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_405.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2844.7505,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_406.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2463.0205,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_407.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 246.76685,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_408.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 342.6156,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_409.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3060.2249,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_410.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3638.9722,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_411.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3611.5771,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_412.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2565.2075,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_413.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2831.7734,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_414.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2789.8984,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_415.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3353.9783,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_416.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3015.201,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_417.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2824.5881,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_418.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2383.8423,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_419.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 278.13922,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_420.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1100.5912,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_421.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2824.5288,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_422.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1053.419,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_423.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3387.8884,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_424.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2830.0413,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_425.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2887.7546,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_426.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2850.9744,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_427.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 334.55112,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_428.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2936.6768,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_429.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2908.8467,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_430.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3155.27,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_431.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2312.8289,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_432.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2277.6396,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_433.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2908.225,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_434.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3446.8435,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_435.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 422.1182,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_436.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2829.1582,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_437.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2524.683,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_438.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 528.97424,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_439.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2577.9868,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_440.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3003.5715,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_441.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3016.9048,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_442.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3472.8416,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_443.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3280.8987,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_444.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2847.5205,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_445.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3716.391,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_446.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 946.8934,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_447.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2840.1,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_448.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2841.7056,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_449.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2538.049,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_450.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 415.27905,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_451.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2610.1914,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_452.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3004.734,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_453.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3017.33,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_454.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3531.194,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_455.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2084.9578,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_456.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2869.0864,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_457.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3417.9836,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_458.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3215.7444,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_459.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2988.9302,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_460.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2833.0818,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_461.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2537.253,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_462.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 354.59586,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_463.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2717.1816,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_464.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3009.684,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_465.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3018.312,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_466.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3512.3376,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_467.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1433.9088,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_468.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2897.5332,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_469.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3090.7715,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_470.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3103.07,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_471.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2859.95,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_472.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2833.8816,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_473.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2825.4211,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_474.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2833.111,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_475.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2638.7305,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_476.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3003.742,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_477.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3011.9849,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_478.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2943.5361,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_479.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 824.81226,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_480.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2887.861,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_481.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2663.0996,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_482.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 6300.2876,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_483.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3059.0513,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_484.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 4540.2744,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_485.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3780.1294,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_486.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3746.1418,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_487.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 254.85167,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_488.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 856.84454,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_489.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1461.2142,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_490.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3451.445,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_491.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3683.453,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_492.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2987.3193,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_493.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2626.5332,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_494.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 4660.6455,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_495.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2979.012,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_496.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3697.9648,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_497.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2486.4744,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_498.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3197.5684,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_499.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 362.45538,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_500.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 693.2595,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_501.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1294.8177,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_502.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3437.932,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_503.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3485.3318,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_504.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3268.1443,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_505.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3574.7668,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_506.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3220.4685,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_507.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2945.987,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_508.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2727.5818,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_509.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1458.6636,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_510.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3071.6567,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_511.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 348.29865,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_512.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 398.65698,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_513.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 976.406,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_514.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3469.5647,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_515.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3464.7644,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_516.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3513.5122,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_517.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2864.1616,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_518.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2998.1074,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_519.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2266.0166,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_520.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 466.10916,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_521.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 420.09283,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_522.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 371.22653,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_523.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2980.139,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_524.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2967.479,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_525.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2714.8477,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_526.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3489.6736,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_527.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3689.7966,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_528.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3599.2024,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_529.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 13265.734,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_530.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 4928.9824,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_531.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 11631.808,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_532.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 10497.235,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_533.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 5343.395,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_534.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3560.5935,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_535.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3703.513,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_536.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 8066.127,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_537.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 4132.124,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_538.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2974.8113,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_539.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3379.425,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_540.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3443.142,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_541.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 14341.772,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_542.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 5292.59,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_543.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 10743.07,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_544.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 9905.731,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_545.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 5132.082,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_546.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1010.3349,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_547.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2243.1409,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_548.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 6243.2954,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_549.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3209.8213,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_550.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3020.0771,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_551.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3499.2048,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_552.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3827.7156,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_553.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 12060.48,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_554.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 6210.6597,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_555.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 8281.063,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_556.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 7342.8057,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_557.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3413.484,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_558.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1770.4098,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_559.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1214.306,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_560.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3796.2793,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_561.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1876.8032,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_562.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 315.20474,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_563.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2905.4211,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_564.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2999.8225,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_565.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2975.2866,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_566.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3189.2646,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_567.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 496.5845,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_568.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2901.375,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_569.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3000.5474,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_570.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2828.993,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_571.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 626.48047,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_572.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 482.67685,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_573.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2585.2485,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_574.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2240.1062,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_575.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3000.344,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_576.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3604.826,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_577.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 386.5305,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_578.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 486.18396,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_579.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3348.166,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_580.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2563.9739,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_581.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2609.8774,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_582.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2950.3628,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_583.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1956.0289,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_584.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2683.3792,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_585.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2522.9124,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_586.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2561.8286,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_587.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2574.101,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_588.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2527.074,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_589.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 361.9765,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_590.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 445.85904,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_591.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2969.117,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_592.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2948.208,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_593.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2958.0688,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_594.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2963.9568,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_595.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3309.6794,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_596.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2711.6333,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_597.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2596.9846,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_598.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2562.6733,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_599.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3393.7163,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_600.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2544.8687,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_601.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2547.6614,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_602.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 399.14157,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_603.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 624.5679,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_604.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2891.709,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_605.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2946.9644,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_606.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2973.1897,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_607.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3327.7952,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_608.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2681.2058,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_609.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2588.54,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_610.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2563.3787,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_611.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2817.782,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_612.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2109.6301,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_613.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2564.843,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_614.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2868.8657,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_615.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1150.4658,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_616.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2577.3962,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_617.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2565.668,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_618.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2566.167,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_619.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3376.8086,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_620.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3292.1575,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_621.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2582.8223,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_622.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2572.2793,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_623.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2772.9417,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_624.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2865.1667,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_625.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3150.266,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_626.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2799.2603,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_627.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2779.6362,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_628.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2975.1147,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_629.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2985.5608,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_630.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3015.682,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_631.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3542.3193,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_632.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3364.512,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_633.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2969.0896,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_634.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3257.534,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_635.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2852.532,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_636.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2935.7097,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_637.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3054.6777,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_638.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2802.7007,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_639.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2826.92,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_640.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2985.285,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_641.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2971.9023,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_642.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2977.4497,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_643.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 317.42123,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_644.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3429.2898,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_645.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2989.94,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_646.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3281.379,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_647.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3291.0918,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_648.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2877.3157,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_649.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3534.1973,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_650.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2819.9487,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_651.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2925.4385,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_652.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3005.4587,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_653.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2975.4827,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_654.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2976.0276,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_655.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 380.28357,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_656.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2797.3823,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_657.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3010.9102,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_658.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3427.3955,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_659.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 901.27075,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_660.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2836.06,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_661.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3206.3152,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_662.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3269.4902,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_663.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3210.4011,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_664.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3096.9072,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_665.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2692.0713,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_666.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2655.9453,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_667.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2853.8015,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_668.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2995.5723,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_669.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2997.9316,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_670.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3456.9536,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_671.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3578.1133,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_672.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3246.1777,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_673.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3711.9355,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_674.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2719.8542,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_675.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 7951.361,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_676.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2141.3418,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_677.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 12791.23,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_678.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1357.5809,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_679.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1819.0422,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_680.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2504.0303,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_681.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1719.7177,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_682.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3536.422,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_683.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3293.8547,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_684.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3265.637,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_685.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2704.3694,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_686.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2614.2544,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_687.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 5936.112,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_688.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3048.8098,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_689.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 9827.599,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_690.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3253.4768,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_691.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1784.0934,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_692.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2152.1855,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_693.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1273.1425,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_694.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3581.516,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_695.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3265.536,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_696.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3261.4216,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_697.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1234.7242,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_698.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3307.3645,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_699.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3014.2595,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_700.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3326.0532,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_701.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 6914.95,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_702.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 4011.302,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_703.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1314.6407,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_704.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1633.4427,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_705.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 715.29443,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_706.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3568.6973,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_707.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3286.1729,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_708.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3257.6855,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_709.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2644.6504,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_710.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2629.2544,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_711.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2603.3262,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_712.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2822.3098,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_713.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 614.4342,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_714.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 469.13934,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_715.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 358.62906,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_716.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2693.7844,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_717.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3006.455,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_718.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3488.6155,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_719.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3499.614,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_720.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3485.5,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_721.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 36223.42,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_722.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 13371.617,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_723.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3393.6353,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_724.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 22133.434,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_725.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 42251.75,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_726.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2886.1282,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_727.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 7688.639,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_728.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 16436.979,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_729.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 21114.191,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_730.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 5492.7603,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_731.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 5131.944,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_732.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 7303.1562,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_733.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 23331.305,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_734.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 11450.247,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_735.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 4084.963,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_736.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 24010.082,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_737.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 23259.389,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_738.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3600.9307,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_739.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3014.4521,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_740.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 9704.555,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_741.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 17881.453,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_742.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 4480.115,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_743.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 4401.32,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_744.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 7174.3853,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_745.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 11891.169,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_746.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 8854.192,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_747.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 5316.9062,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_748.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 14724.266,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_749.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 13610.986,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_750.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3319.7908,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_751.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 4041.0942,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_752.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 8284.232,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_753.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 13390.809,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_754.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3507.4087,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_755.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3137.942,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_756.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 6266.9785,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_757.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2830.089,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_758.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3309.2212,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_759.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2629.032,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_760.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2510.44,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_761.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2951.25,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_762.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2666.7266,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_763.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2736.9255,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_764.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 360.19928,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_765.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2641.2805,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_766.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1909.7594,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_767.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2271.0435,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_768.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 1.0,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 1.0, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3036.8157,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_769.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2206.0454,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_770.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2218.5337,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_771.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3733.4895,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_772.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3677.156,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_773.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1459.797,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_774.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3687.1072,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_775.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3351.7827,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_776.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3711.305,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_777.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3734.5354,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_778.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1367.2871,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_779.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1317.0836,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_780.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1489.5583,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_781.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3542.1453,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_782.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2147.135,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_783.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2023.4811,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_784.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1128.8032,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_785.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1324.1495,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_786.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3729.7905,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_787.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1422.4989,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_788.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3725.7063,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_789.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3738.9504,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_790.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1174.9973,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_791.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3698.5686,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_792.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1441.1842,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_793.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2670.0063,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_794.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2137.329,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_795.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2343.3853,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_796.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1115.6545,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_797.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1310.0887,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_798.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3678.054,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_799.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3310.5476,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_800.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3151.2861,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_801.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3416.7307,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_802.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3702.9595,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_803.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3698.0334,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_804.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1479.7762,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_805.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1985.4417,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_806.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2168.1494,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_807.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2775.7214,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_808.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1168.8862,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_809.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3637.3882,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_810.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3633.3506,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_811.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2971.4321,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_812.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1688.8252,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_813.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1790.779,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_814.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3669.4656,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_815.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3734.5554,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_816.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2015.565,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_817.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1802.5939,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_818.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2133.1687,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_819.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1977.1697,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_820.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1191.3232,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_821.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1688.1945,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_822.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3716.4702,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_823.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3664.8127,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_824.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3623.1113,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_825.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1845.3883,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_826.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1379.4862,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_827.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3725.9258,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_828.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3624.9253,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_829.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1902.4526,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_830.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3659.903,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_831.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1876.3624,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_832.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1265.182,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_833.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1664.036,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_834.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2746.32,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_835.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3665.8423,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_836.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3630.5198,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_837.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1824.0143,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_838.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1933.8278,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_839.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3638.6006,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_840.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3645.692,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_841.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2089.1265,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_842.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3602.917,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_843.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3729.0703,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_844.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1410.7505,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_845.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1659.2814,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_846.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1572.2035,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_847.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3629.964,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_848.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3670.302,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_849.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1744.9631,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_850.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2752.0193,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_851.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3071.77,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_852.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3722.6028,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_853.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2078.966,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_854.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3605.995,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_855.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3602.3823,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_856.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1369.4122,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_857.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1635.8591,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_858.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1616.1478,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_859.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3619.678,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_860.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3664.9333,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_861.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3670.4749,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_862.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3606.3616,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_863.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2483.3499,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_864.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2040.2811,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_865.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1900.9261,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_866.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2009.1814,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_867.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 924.47784,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_868.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1694.4032,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_869.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3693.238,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_870.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 4282.0425,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_871.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3642.2656,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_872.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3608.9436,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_873.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3665.4812,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_874.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1985.1952,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_875.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2231.3457,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_876.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2060.3093,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_877.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1871.7566,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_878.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1912.7334,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_879.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 880.8384,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_880.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1686.3494,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_881.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3624.7256,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_882.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3866.287,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_883.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3619.8052,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_884.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3662.473,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_885.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3664.7793,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_886.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1977.8859,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_887.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2141.45,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_888.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1989.171,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_889.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2071.851,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_890.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1862.8431,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_891.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1173.7046,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_892.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1682.2249,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_893.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1667.8497,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_894.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3665.5234,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_895.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3693.6736,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_896.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3646.6724,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_897.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3665.6108,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_898.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1978.2147,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_899.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2170.506,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_900.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2004.4281,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_901.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2074.2148,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_902.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1916.9933,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_903.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1949.3888,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_904.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1681.5876,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_905.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1593.0247,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_906.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1451.2327,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_907.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3698.0027,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_908.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2192.207,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_909.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1755.088,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_910.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1990.9799,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_911.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2012.954,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_912.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2058.8308,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_913.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 6075.9297,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_914.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 4724.05,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_915.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 8546.396,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_916.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1669.0702,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_917.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3812.6965,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_918.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1676.2096,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_919.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3663.0054,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_920.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 4157.259,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_921.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3941.1758,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_922.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2030.1052,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_923.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2019.4523,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_924.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2046.8816,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_925.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 4650.4946,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_926.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 4205.1763,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_927.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 8189.86,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_928.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1672.2474,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_929.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1666.3192,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_930.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1675.5646,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_931.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1292.1351,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_932.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3759.8396,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_933.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1658.8907,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_934.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1998.2012,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_935.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2132.0808,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_936.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2037.5203,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_937.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3833.6458,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_938.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3684.6367,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_939.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 7184.1562,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_940.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1668.3457,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_941.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1665.1226,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_942.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1675.3884,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_943.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1692.5856,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_944.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3667.5242,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_945.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1645.8783,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_946.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2189.3625,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_947.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2199.789,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_948.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2036.709,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_949.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1287.2145,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_950.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1187.9077,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_951.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1744.2667,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_952.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3625.9297,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_953.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3616.7449,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_954.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1155.5472,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_955.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1493.0674,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_956.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1108.8044,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_957.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3602.6272,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_958.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2036.3518,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_959.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1601.3771,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_960.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2282.2888,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_961.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1976.7917,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_962.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2200.0396,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_963.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2291.7615,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_964.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3621.719,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_965.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1169.3008,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_966.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1559.0311,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_967.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1523.9414,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_968.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3722.8093,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_969.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3425.0889,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_970.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1917.7407,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_971.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1592.9316,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_972.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 863.11554,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_973.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1776.3812,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_974.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2144.5369,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_975.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2206.5542,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_976.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1093.1194,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_977.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1141.8983,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_978.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1628.6179,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_979.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1514.3177,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_980.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3708.491,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_981.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1685.1141,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_982.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1976.7659,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_983.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1455.1703,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_984.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1098.3113,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_985.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2855.8542,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_986.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2053.1758,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_987.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2108.337,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_988.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1082.6948,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_989.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1133.6654,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_990.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1614.8837,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_991.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1371.7133,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_992.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3414.1064,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_993.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1873.6019,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_994.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1984.5416,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_995.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 805.5301,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_996.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1040.3038,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_997.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2146.2417,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_998.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1944.5457,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_999.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2083.257,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1000.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1092.2798,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1001.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1367.8608,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1002.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3614.716,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1003.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2607.9402,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1004.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3711.952,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1005.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2820.8882,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1006.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3728.4734,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1007.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3729.8176,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1008.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3246.2644,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1009.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1426.4738,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1010.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3601.7332,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1011.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3606.6016,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1012.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1710.3973,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1013.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1698.7767,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1014.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1703.8188,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1015.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1759.1544,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1016.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3663.0198,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1017.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3610.981,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1018.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2097.1467,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1019.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3620.0642,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1020.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3617.5808,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1021.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 972.99646,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1022.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3619.7542,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1023.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3618.7732,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1024.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1709.3624,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1025.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1703.5709,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1026.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1692.8633,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1027.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2135.699,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1028.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3664.988,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1029.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3641.5945,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1030.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2137.3657,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1031.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3637.407,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1032.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3619.0469,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1033.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2006.2454,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1034.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3624.9321,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1035.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3653.3296,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1036.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1688.6721,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1037.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1711.1903,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1038.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1674.7502,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1039.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3700.6272,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1040.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3663.3516,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1041.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3658.6147,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1042.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2153.4841,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1043.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3666.7444,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1044.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3617.573,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1045.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2035.901,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1046.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3615.519,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1047.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3652.1658,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1048.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3659.7834,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1049.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 2120.8113,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1050.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1528.4741,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1051.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3604.5342,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1052.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3664.5818,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1053.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3671.2495,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1054.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2288.3584,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1055.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3688.4614,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1056.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.1,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.1, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3598.3372,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1057.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2159.0122,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1058.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3625.265,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1059.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2171.6904,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1060.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1665.8276,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1061.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3703.9268,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1062.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3797.3188,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1063.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1630.5507,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1064.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1949.5574,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1065.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 826.0714,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1066.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1559.3278,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1067.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1949.512,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1068.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1971.571,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1069.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1963.1587,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1070.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2006.4923,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1071.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2069.7368,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1072.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1668.6919,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1073.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3664.8997,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1074.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3723.3862,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1075.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2030.8483,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1076.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2067.571,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1077.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1093.6771,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1078.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1561.1014,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1079.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2068.586,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1080.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1975.2601,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1081.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1948.6124,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1082.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2040.7708,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1083.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1963.534,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1084.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1674.7487,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1085.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1486.8649,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1086.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3695.9243,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1087.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1967.9971,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1088.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2177.143,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1089.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1754.8195,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1090.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2251.0825,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1091.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1954.9187,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1092.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1957.5819,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1093.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2243.8892,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1094.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1994.8861,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1095.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1957.9973,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1096.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1607.5634,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1097.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1635.09,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1098.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1599.8131,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1099.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3737.0078,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1100.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2034.163,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1101.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2078.0603,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1102.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2195.4902,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1103.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1968.5626,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1104.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.2,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.2, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2021.8978,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1105.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1667.8848,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1106.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1687.773,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1107.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3741.2065,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1108.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1663.166,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1109.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1733.9496,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1110.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1741.8379,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1111.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1666.8839,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1112.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1667.0938,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1113.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1666.5204,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1114.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3661.7834,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1115.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2002.4252,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1116.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3610.2822,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1117.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1666.578,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1118.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1681.1152,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1119.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3666.2917,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1120.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1665.6202,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1121.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1700.784,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1122.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1719.2635,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1123.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1667.862,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1124.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1666.1124,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1125.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1665.118,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1126.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3605.952,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1127.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2279.2866,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1128.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2043.2249,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1129.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1667.0137,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1130.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1672.8956,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1131.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1693.5706,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1132.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3661.0803,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1133.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1677.3298,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1134.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1680.0963,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1135.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1673.3944,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1136.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1667.716,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1137.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1665.6005,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1138.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1964.2068,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1139.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3615.7363,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1140.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2046.7072,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1141.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3659.1655,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1142.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1473.4241,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1143.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1438.8517,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1144.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3663.0532,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1145.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3650.6577,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1146.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1791.7133,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1147.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 975.6894,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1148.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1622.0449,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1149.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 1625.6865,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1150.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2086.583,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1151.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2041.8265,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1152.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.7,
      "inp_scaling": 0.3,
      "regul": 0.01,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.7, 'inp_scaling': 0.3, 'regul': 0.01, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 3608.5938,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1153.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2057.7148,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1154.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2122.9294,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1155.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1988.1147,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1156.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3621.5242,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1157.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1675.5099,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1158.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1534.1927,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1159.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2196.0354,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1160.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3602.949,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1161.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3638.889,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1162.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 2370.3784,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1163.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1694.6764,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1164.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1461.1951,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1165.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2289.1387,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1166.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2249.6077,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1167.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1920.7128,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1168.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1076.0486,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1169.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3544.6304,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1170.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1590.9803,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1171.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2243.2283,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1172.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3607.5005,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1173.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3607.0784,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1174.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1072.9331,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1175.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1588.6687,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1176.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 3e-06,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 3e-06, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1343.815,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1177.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3671.5803,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1178.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 1563.3922,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1179.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 250,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 250, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 2314.5056,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1180.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 300,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 300, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 1075.6042,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1181.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 300, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3600.319,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1182.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 300,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 300, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 300 units.

 ##################################################################### 
Mean NRMSE 3587.2842,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1183.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 500,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 500, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 2231.6511,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1184.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 500, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3654.133,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1185.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 500,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 500, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 500 units.

 ##################################################################### 
Mean NRMSE 3600.53,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1186.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 750,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 750, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1261.0962,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1187.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 750, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 1157.0542,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1188.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 1e-05,
      "units": 750,
      "rho": 1.1,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 1e-05, 'units': 750, 'rho': 1.1, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 750 units.

 ##################################################################### 
Mean NRMSE 957.5731,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1189.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 250,
      "rho": 0.9,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 250, 'rho': 0.9, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3600.4487,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)


--- Config File: config_tmp_1190.json ---
{
  "lag": 1,
  "bigger_dataset": false,
  "test_trials": 1,
  "n_modules": 3,
  "use_self_loop": true,
  "washout": 200,
  "mode": "entangled",
  "rescale_input": false,
  "show_plot": false,
  "input_size": 3,
  "output_size": 3,
  "concat": false,
  "reservoirs": [
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 250,
      "rho": 0.9,
      "solver": null
    },
    {
      "input_size": 1,
      "output_size": 1,
      "leaky": 0.6,
      "inp_scaling": 0.05,
      "regul": 1e-06,
      "units": 300,
      "rho": 1.0,
      "solver": null
    },
    {
      "input_size": 2,
      "output_size": 1,
      "leaky": 0.8,
      "inp_scaling": 0.05,
      "regul": 0.01,
      "units": 250,
      "rho": 1.0,
      "solver": null
    }
  ]
}
{'lag': 1, 'bigger_dataset': False, 'test_trials': 1, 'n_modules': 3, 'use_self_loop': True, 'washout': 200, 'mode': 'entangled', 'rescale_input': False, 'show_plot': False, 'input_size': 3, 'output_size': 3, 'concat': False, 'reservoirs': [{'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 250, 'rho': 0.9, 'solver': None}, {'input_size': 1, 'output_size': 1, 'leaky': 0.6, 'inp_scaling': 0.05, 'regul': 1e-06, 'units': 300, 'rho': 1.0, 'solver': None}, {'input_size': 2, 'output_size': 1, 'leaky': 0.8, 'inp_scaling': 0.05, 'regul': 0.01, 'units': 250, 'rho': 1.0, 'solver': None}]}
[RESERVOIR CELL 0] created with 250 units.

[RESERVOIR CELL 1] created with 300 units.

[RESERVOIR CELL 2] created with 250 units.

 ##################################################################### 
Mean NRMSE 3165.0063,    std 0.0
 ##################################################################### 


/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/lorenz.py:143: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  test_target = torch.tensor(test_dataset[0:n], dtype=torch.float32).reshape(-1, n_out).numpy() # reshape element to torch.Size([rows=len(train_target), columns=3])
/Users/matt/Desktop/Tesi/Codice/ESN & attrattori/lorenz attractor/esn_alternative.py:603: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(predictions, dtype=torch.float32)

